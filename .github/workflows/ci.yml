name: CI + Deploy to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: vercel-deploy

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      # Step 3.1: Create .env.production file
      - name: Inject Supabase env variables
        run: |
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env.production
          echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env.production
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env.production
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env.production

      # Step 3.2: Create .env.development file
      - name: Debug env file
        run: cat .env.production | grep SUPABASE

      # Step 4: Lint code
      - name: Run Lint
        run: npm run lint

      # Step 6: Build Next.js project
      - name: Build Next.js
        run: npm run build

      # Step 7: Deploy to Vercel (only if on main branch)
      - name: Deploy to Vercel
        if: github.ref == 'refs/heads/main'
        run: |
          npx vercel deploy --prod --yes \
            --token=$VERCEL_TOKEN \
            --org-id=$VERCEL_ORG_ID \
            --project-id=$VERCEL_PROJECT_ID
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
